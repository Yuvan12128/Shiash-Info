27.02.2024 |
___________

Programming language;
--------------------

	In oder to commumicate with he computer we are having set of programing language based on hte instruction 
written on programs using the programing language we can perform various task.

Types if programming languvage;
------------------------------
	
	low-leval programming lang;
	high level language;

low level language;
------------------

	it is machine dependent lang(os) to run these program we dont need complier or interpreter.

high-level programming language;
-------------------------------

	it is used to develop the softwer and website in oder to run these programming lang we need compiler or 
interprinter tbe advantage of using the high level programming lang is it easy to maintain, read and write

Type of Application;
-------------------
	Desktop Appication (Stand Alone Application)
	Web Application( Enterprise Application)
 	Mobile Application.

Java;
-----
==>java os high leval programming language 
==>father of java is james gosling.
==>java is initially developed user sum micro System.
==>project is stated on 1991. the number of people worked in this project under mike sheridan, oactrick naughton,
 java name of the team called as green tram.
==>the first version of java is released on 1995 initial purpose of development of programming the tele 
communication eg,setup name of the first version of java re aplha and beta.

Features of java :
-----------------
Simple 
oop
secured
robust platfrom independent'protable
architectural neutral.

Simple
------
	java is derived from c++ programming lang so syntax are easy to in java we are not using complicate features 
like pointers muliple inheritance are not supported call level in interfacd;

oop;
----
	jsvs is object oriented programming lang in java everythings object. we can organize the propertices of the
 classes the objects. using wethodology of oop it simplifies software development

important oop features are;
--------------------------
	Abstraction
	Encapsulation 
	polymorphism.
	inheritance
	class and object

plantfrom intependent;
--------------------
	we can run java in many platforms main methordology to devolop java is write ince run anywhere 
	we can achive the dependency by having the byte code representation and also java.

Secured;
--------
	here we not using  ponters so adderss con't be founded.
	inside the java we are the multiple lauers.

class loader;
------------
	it is the part is h=jre which is load the class into jre dynamically.

byte code verifier;
-------------------
	it checks the code that can be accessed by the object
robust;
------
	Rou=bust meaning is strog. using the garbage collaction we are having stroge memory managerr it is dynaically 
rome the used variable, method, object from stroage before execution.
=========================================================================================================================
29.02.2024 |
___________
jdk;
----
	java development kit;
		using the jdk we can get software development enviroment which is used to develop java application.
		it is physically exists.
		in side the jdk we are having the jre java run time enviroment and jvm (java virtual memory) and also 
development tool like class loader and compiler jar file external resouces.
jre;
---
	it is used to prouide developing tool used for java apllication it contains set of files to execute the also jre 
libraries we can execute a single program in java itis also physically exits.
jvm;
----
Java virtuval machine	it is a  program to execut the .class file in java main stops it is used to execute the main
methord from the class load the class execute the class deploy the class whiich all are handled by jvm and also it 
provide runtime environment.

classification of java;
----------------------
	java is case sensitive programming language here duplicate naming with same case are not allowed in java. 
Java is also following the structure like;
1)create project ;
2)create package inside the project;
3)inside the package only we can create an class in java 
4)execute the class it can only run the main method from the give class.

//identifier are naming in java 
project name.
package name.
class name.
variable name.
method name.
object name.

allowed charactres to create the naming in java[0-9][a-z][A-Z][$_] naming should with numerical values(not allowed);
//return type methods 
primitve or non premitive methods;
class demo {
	void method(){	
	}
	int methos(){
		return 3234;
	}
public static void main(String[] agrs){
	int a;
	a=100;
}
}
 
==========================================================================================================================
02.03.2024 |
___________

Key Words in java;
-----------------
	these also called as reserved  word in java 
we can only use this keyword if you try to perform any modification over the keyword compliler caonsider as identifier

Access Modifier Keywords;
------------------------
	public, private, protected.

primitve stat type keyword;
--------------------------
	byte, short, int, long, float, double, char, boolean;

Selection statment keyword;
--------------------------
	if, else , if else, switch, case, default.
looping statement keywords;
--------------------------
	while, for, do;
break and continue keywords;
--------------------------
	break, continue;
class level keyword;
-------------------
	class, new, static, final, abstract, interface,extrends, implements.
method level keyword;
--------------------
	void, return, synchronized.
exeception handling keyword;
---------------------------
	try, catch, finally, throws, throws.
Find valid and invalid keywords;
-------------------------------
String     ==>invalid;     
int        ==>valid;
integer    ==>invalid;
class      ==>invalid;
non-static ==>invalid;
local      ==>invalid;
file       ==>invalid;
abstract   ==>valid;
instant    ==>valid;
finialize  ==>invalid;
finally    ==>valid;
final      ==>valid;

data types in java;
------------------
	data type it used to store a value invariable.
there are two data type in java;

				data type
				     |
			___________________________________________
			|							|
		primitive datatype      		non-primitive datatype
boolean	char		numeric data
|		|			|
boolean  	char			floating(float,double);
					|
					Integer(byte,short,int,long);

primitiv data type;
-------------------
	the size is fixed in primitive data type.
boolean data type;
-----------------
	the values we can store is either true or false;
Syntax;
------
boolean condition=true;
boolean condition=false;

class a{
public static void main(String[]args){
boolean con=True; //----c.e;
System.out.println(con);
}
}
o.p;
-----
c.e
=============================================================================================
7.3.2024 
--------
Test 1 github link:https://github.com/Yuvan12128/Shiash-Info/blob/d2e1f03f7f1d614731fa21bfd106e025722fd4a7/Test/q1.txt
=============================================================================================
9.3.24 |
--------

String ;

Litrals and Object;
------------------

Litrals;
--------
eg: String s="good evening";
->SCP (String Constant pool);
->SCP -> s-> good Evening

Object;
-------
eg: String s1=new String ("Good Evening");->Heap Memory
heap -> s1-> Good Eveing ;

String s1="Friday class";
String s2="friday class";
scp->s1,s2->friday class-636647
String s3=new string ("friday class");
String s4 =new String("Friday class");

Declaration and Initialization of string ;
-declaration 
String a;

-Initiatation;
a="10";

+- Opdator and cancat ()- method: ->,concat()-it willjoin both string value.
->int inc=1+2;
String str="hai"+"hello";
System.out.println(str);//hai hello
System.out.println(inu);//3
System.out.println(string+inc);//hai hello3
System.out.println(str+1+2);//haihello12
->concat();
String s="hello"; 
String s1="hello";
System.out.println(s.concat(s1));//hellohello
System.out.println(s.caoncat("hai"));//hellohai;
system.out.pinrtln(s.cancat(" ").cancat("hai"));//hellohai
+oprator - it is h=just combine both string without create new object (temprary).caoncat()-It is combine both 
String but it create a new object.
char ch='a';
String ss=new String();
ss.conat("before string");
System.out.println("value of ss:"+ss+"end");
ss=ss.caoncat("after string");
System.out.println("value of ss:"+ss+"end");
//ss=after string 
ss="hello";
// ss= hello (un referneced object value)-->(?);
after string (garbage collector);
// immitable 
String buffer sb=new SringBuffer();
sb.append("hello");
System.out.println("value of sb:"+sb);
//== Opator(primitive data type);
System.out.println(11==44);
System.out.println(10.0==10);
System.out.println(false==false);
System.out.println(true==false);
System.out.println(97=='a');

String lit="good";
string obj=new String ("good ");
String lit2="good";
String obj2=new string("good");
String lit3=lit2;
String obj3=obj;
String obj4=new String(obj);
//==Operator in on primitive data type
//when we are using the == oprator in non primitve data type address location will be compared;
//in the case each object should cantain seperate memory allocation when it is an string object;
// tit,lit1,lit3-->good(scp);
//obj,obj3-->good(heap);
//obj2-->good(heap);
System.out.println(lit==obj);
System.out.println(lit==lit2);
System.out.println(lit==lit3);
System.out.println(obj==obj2);
System.out.println(obj==obj3);
out;
---
hello everyone
value of ss:end
value of ss: after string end
value of modified ss object is: hello
value of sb:hello
false
true 
true
false
false
true
false
true 
false
true
------------------------------------------------------

byte b=10;
short s=10;
int a=10;
long l=10l;
String samp =new String ("ff");
samp=sam+100;
System.out.println(samp);
int dd=10;
samp=dd+samp;
System.out.println(samp);
//l=dd+a+s+l+samp;
System.out.println("after :"+samp);
samp="aa"+dd+a+s+l+samp;
System.out.println("end :"+samp);
out;
---
ff100
10ff100
after :4010ff100
end :aa101010104010ff100
========================================================
12.03.2024|
----------

String s="100";
//find the lenth of string;
System.out.println(s.lenght());
//to add two string 
s=s.cancat("percentage");
System.out.print(s);
System.out.println("lenght  :"+s.length());
s="    !"+s+"!    ";
System.out.println(s);
// remove the spaces of the string beginning and end
s=s.trim();
System.out.println(s);
// to retrive the specific index of character in string 
// index position are always starts with 0;
System.out.println("3rd index position character of string s object is :"+s.charAt(3));
// to retive the index position of the string character
System.out.println(s.intexOf("cent"));
System.out.println(s.intexOf('p'));
System.out.println(s.intexOf("cemt"));

// replase the character of string 
s=s.replase('e','5');
System.out.println("replace the character of string :"+s);

//convert the character in to upper case;
s=s.toUppercase();
System.out.println("the character into upper case"+s);

// Convert the character into lower case;
   s=s.toLowerCase();
System.out.println("convert to the lower case"+s);
// last index position of the character 
System.out.println("last index position change of the $ character :"+s.lastIndexOf('$'));
// to retrive the froup of character based on the start index and end index position -1;
System.out.println("group of tje character based on the start index position -1 substring :+s.subString());
System.out.println(s.subString(11));
//to store the group of slipt string in array we canuse split();
String [] obj=s.split("$");

output;
-------
3
100 percentage
lenght   :14
    !100 percentage!
!100 percentage!
3rd index position charcater of String s object is :0
8
5
-1
replase the character of string   :!100 p5rc5ntag5!
the character into uppercase   :!100 P5RC5NTAG5!
convert the lower case   :!100 p5rc5ntag5!
last index position of the $ character   :-1
group of character based on the start index position -1 subString :0 p
tag5!
[100p,rc,ntag,!]
[!,1,0,0, ,p,5,r,c,5,n,t,a,g,5,!]
true 
false
true
false 
true 
---------------------------------------------------------------------------------------------------------------------------------------------------

Exception Handling:-
------------------
    Exception : some un wanted and un exception lines of statement that narmally disturb the flow of execution is called exception 

eg:
--
     comple will occur due to system lack of resource 

Exception are the classes which is present in java.lang.*

eg:
--
    class demo{
public static void main(String[] args){
int a=10;
System.out.println(a/10);
System.out.println(1/0);-------e.c;
}

}


---------------------------------------------------------------------------------------------------------------------------------------------------

Termination : Abnormal Termination:-
eg:2;
-----
class demo{
public static void main(String[]args){
int a=10;
System.out.println(a/10);
System.out.println("hello");
}
}
out:
---
1
hello
termination:normal termination 
---------------------------------------------------------------------------------
eg:3:-
-----

class demo{
public static void main(String[]args){
System.out.println("hello");
String a="sss";
System.out.println(a.indexOf(99));

}

}

output;
------
String Index out of Bound Exception(r.e)
Termination :Abnarmal Termination
===================================================================================================================================================
14.03.2024 |
-----------
===================================================================================================================================================
26.03.2014;
-----------

task;
1.
while (true)
System.out.print("hello");
o/p;
---
hello
hello
---------------------------------------

2.
while(false)
System.out.print("hello");
System.out.print("false");
o/p;
--
e.p
-----------------------------------------

3.
int i=10;
final int j=10;
while(i<=j){
i=23;
System.out.print("while loop");

}
System.out.print("hello");
o/p
---
while loop 
hello
-----------------------------------------

4.
final int i=10;
final j=10;
whike(i<j)
{
System.out.print("while loop");
}
System.out.println("hello");------
o/p;
----c.eunreachablecode;
-------------------------------------------
5.
final int i=10;
final int j=10;
while(i!=j){
Sysout("while loop");----->c.e
}
Sysout("hello");

o/p;
----
c.e
=================================================================
Array;
if u want to store the collection of values from similar data types from the length we can use array is an class present in java.lang.package

chreacteristic of array:
size is fixed
we cant able to increase or decrease the size of the array only homogeneous data type value are allowed
it is always initilized with the defult value for 
Single dimentional array:
Syntax:
-------
int [] obj =new int[4(int size)];
eg:
---
class A{
public static void main(String [] args){
//declaration
String [] a1;
//inilitizetion the array
a1=new String[3];
//value of index of array object
3-total size of the array -3
total index postion -[0] to [2]
negative values are not allowed in index postion it always start with zero
same  negative values are not allowed in index position 
//values of index position of array object
a1[0]=22;
//print the array specific index positon value  
System.out.print(a1[2]);
System.out.print(a1[0]);
System.out.print(a1[3]);
System.out.print(a1);----------->class name with hashcode
//size of array 
System.out.print(a1.length);
System.out.print(a1.getClass().getName());
//print an class object
}
}
o/p;
----
null
22
c.e----->Array Index out of Bound Exception
[String 
[String@34243

task:
----
class Sample {
public static void main(String []args){
Sample s=new Sample();
Sytem.out.print(s);

int[] arr=new int[233];
System.out.print(arr);

int val=arr.length-200;
Sytem.out.print(val);

byte[]b=new byte[211];
Sytem.out.print(b);
b[121]=100;
System.out.print(s.getClass().getName());
System.out.print(arr.getClass().getName());
System.out.print(b.getClass().getName());
System.out.print(val.getClass().getName());
}
}
o/p;
demo.demotest@73a8dfcc
[I@1c655221
33
[B@58d25a40
demo.demotest
[I
[B
c.e
----------------------------------------------------------
there ae three ways to print array values:
------------------------------------------
Array class 
for each 
for loop 
1.Arrays is a class present java.util

Class A{

pulbic static void main(String []args){
int [] arr=new int[2];
System.out.print(Arrray.toString(arr));
}
o/p';
-----
[0,0]

Class A{
public static void main(String[]args){
Sample s=new Sample();
System.out.print(s);
int[] arr=new int [5];
arr[4]=11;
arr[2]=11;
arr[3-2]='a';
for(int i=0;i<=arr.length;i++){
System.out.print(arr[i]);
}
}
}
o/p;
----
0
97
11
0
11
============================================================
28.03.2024;
----------
    declaration, initilization, value representation of single dimentional array in single line.

int [] a ={11,12,13};
int[] b;
b={22,11};------->c.e;

//for each loop

for(int c:a){
sysout(c);

}
o/p;
String s="hello everyone";
char []ch=s.toCharArray();

for(char i:ch){

sysout(i);
}
o/p;
---
h
e
l
l
o

e
v
e
o
n
e
--------------------------------------------------------------
two dimentional ;
-----------------
if u want to store the group of values based on row and columns in similar data type for that we have to user two dimention array;


synatx:
------
int[][] a=new int [rows][column];
eg:

Class A{
public static void main (String[] args){
int [] [] obj=new in[3][3];
//rows----->0,1,2 index postions created
//for each index we have to create 0,1,2,3 index columns

}

}

//to find the size of array
int[][] obj =new int[3][4];
sysout(obj.length);---------------->retrie the row size
//to find size of specific index row columns
syosut(obj[0].length);
o/p;
----
//represent the value for array:

int [][]obj=new int[3][4];

obj[2][4]=12;

sysout(obj[2][4]);
syosut(obj[0][0]);

o/p;
----
12
0
//to create a array with different column size index row position;
 int[][] arr=new int [3][];
arr[0]=new int[5];
arr[1]=new int[1];
arr[2]=new int[3];
//arr[3]=new int[1];------>c.e;

arr[0][0]=12;
arr[0][1]=212;

arr[0][3]=2;
arr[0][4]=1;

arr[0][3]=99;
arr[0][4]=100;

sysout(arr);

o/p;
----
[[I@gkgyg525241

to print the values of the array:
----------------------------------

Class A{
public static void main(String [] args){

 int[][] arr=new int [3][];
arr[0]=new int[5];
arr[1]=new int[1];
arr[2]=new int[3];

arr[0][0]=12;
arr[0][1]=212;

arr[0][3]=2;
arr[0][4]=1;

arr[0][3]=99;
arr[0][4]=100;

for(int i=0;i<arr.length;i++){
    for(int j=0;j<arr[i].length;j++){
sysout(arr[i][j]+" ");

}sysoutln();

}
}
}

deploy for loop:
-----------------
i=0->0<3->T->j=0->0<5->T

o/p;
----
12 212 0 2 1
99
0 
--------------------------------------------------------


Class A{
public static void main(String [] args){

 int[][] arr=new int [3][];
arr[0]=new int[5];
arr[1]=new int[1];
arr[2]=new int[3];

arr[0][1]=212;

arr[1][3]=2;
arr[0][4]=1;
arr[1][0]=99;


for(int[] a:arr){
for(int a1:a){

sysout(a1+" ");
}
sysoutln(); 
}
}
}

o/p;
----
0 212 0 0 1
99 0 0 2 
-------------------------------------------------------------
 declaration, initilization and values representation for two dim array in single line 

char[][] ch={{'a','2'},
             {'1'},
             {'3','u','@','%','9'}};
total rows:3;
ch[0] row total colimn:2
ch[1] row total column:1
ch[2] row total coulmn:5

for(char[] a:ch){
for(char a1:a){
sysout(a1+" ");
}
sysoutln();
}


======================================================================
04.04.2024;
-----------
type of variables;
there are three types of varisable in java
------------------------------------------

instance variable:
-----------------
    The variables which are created outside scope of the main method and without static keyword the the variable called as instance variable

restrcion of creating instance variable:
----------------------------------------
    Instance vatiable are declaed on the top of the class
    We can perfrom initialization for the instance variable inside the constructor,instance block method 
    defalut values are allowed for the instance variable. only way perfrom initilization or call the instance variable inside the main method by creating object by creating object of the class for each object a seperate memory allocation has been provied has been provided for the instace variable storage has been represented for instace variable inside the heap memory ;
we cant able to call the instance variable static area
sysntax:
--------
class sample{
int a=100;
int b;
public static void main(String []args)
{


}

} 

eg:1;
-----
class sample{
int a=100; ------------>c.e
int b;
{---------------- => multiple instance block allowed;


}
sample()---->defalut construtor
{
a=12;
b=2;
}
public void m1(){
a=111;
b=11;

}
punlic static void m2(){
a=100;--------->c.e;
}
public static void main(String []args)
{
sample obj=new sample();
obj.a=11;
sysout(obj.a);

sample obj2=new sample();
sysout(obj.a);

obj.a=obj2.m1();
sysout(obj.a);
sysout(obj.a);
obj2.=obj.b+obj.a;

}

} 

obj ----->a=100,b=0;------> a=44,b=1---> a=12,b=2--->a=11,b=2;

obj2--->a=100;,b=0;--->a=44,b=1-->a=12,b=2;
o/p;
---
11
12
122
111
113
11

program:
---------
package test;

public class test {
	int var1;
	int var2;
	
	test(){
		System.out.println("defalut constructor");
		m1();
	}
	test(int a){
		System.out.println("parameter constuctor 2");
	}
	{
		System.out.println("instance block");
	}
	{
		System.out.println("instance 2");
	}
	public static void m1() {
		System.out.println("instance method");
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		test obj=new test();
		test obj2=new test(1);
	}

}
o/p
----
instance block
instance 2
defalut constructor
instance method
instance block
instance 2
parameter constuctor 2
================================================================================================
06.04.2024;
----------

static variable 
the variable which are create outside scop of the main method and top of the class with the keyword of static is callec static variable 

staic variable are also called as global variable 

we can create static method, static block outside scop of the main method 

the static block will get executed at the class loading time 

restriction for static method:
------------------------------
 we can perfrom declaration for static variable at the top of the class 
we can perfrom initilization for the static out side scope of main inside static block,static method,instance block, instance method, constructor

default values are allowed 
inside the main method if you want to call the sitac variable there by three ways 
->using the variable 
->class name 
->object reference name 

inside main method we cant able to create static variable 
eg:
---

class StaticExeample{
static int a=100;
static String st="rajini";
public static void main (String []args){
System.out.print(a);
System.out.print(StaticExample.a);
StaticExample obj=new StaticExample();
System.out.print(StaticExample.st.length());
}

}

o/p;
---
100
100
6

eg;
--
class sample {
int var=1900;
static sample[]var2;
public static sample [] fixSize(){
return new sample[size];
}


}
class sample2{
sample obj=new sample(0);
double d=10.1;

static 
{


}
sample2(){
m2()
}
{

}

}


eg 2;
----

class sample {
int var=1900;
static sample[]var2;

publi

}
---------------------------------------------------------------------------------
local vaiables;
-------------

the variables whichare created created inside the block , static block, constructor block, method parameter then the is called local variable 



eg:
--
class A{

{
int a=100;

}
static{
int b=200;
}
A(){

int a=200;
}
public static vaoid m2(int a){

a=21;
}
public static vaoid main(String [] args){
int a=2;


}
}
==============================================================
instance, static, local ;
-------------------------- 



09.04.2024;
-----------
package test;

import java.util.Scanner;

public class test2 {

	public static void main(String[] args) {
		
		q1();
		q2();
		q3();
		q4();
		q5();
		q6();
		q7();
		

	}

	private static void q7() {
		//java program to check if a given integer os odd or even;
		Scanner sc=new Scanner(System.in);
		System.out.println("enter your number :");
		int number=sc.nextInt();
		if(number%2==0) {
			System.out.println("number is even "+number);
		}else System.out.println("number is odd "+number);
		System.out.println("------------------------------------");
	}
	private static void q6() {
		// java program to find sum of Fibonacci series number of first 4 even index
		int f=0;
		int s=1;
		int t;
		for(int i=1;i<=12;i++) {
			System.out.println(f);
			t=f+s;
			f=s;
			s=t;
		}
		System.out.println("---------------------------------");
	}

	private static void q5() {
		//java program to check Armstrong number between two 
		//integer 50,500;
	
		int number=500;
		int rem=0;
		int arm = 0;
		while(number>=1) {
			rem=number%10;
			arm=arm+(rem*rem*rem);
			number=number/10;	
		}System.out.println("500 arm number : "+arm);
		int number1=50;
		int rem1=0;
		int arm1 = 0;
		while(number1>=1) {
			rem1=number1%10;
			arm1=arm1+(rem1*rem1);
			number1=number1/10;	
		}System.out.println("50 arm number : "+arm1);
		System.out.println("------------------------------");
	}

	private static void q4() {
		// ATM program;
		Scanner sc=new Scanner(System.in);
		
		System.out.println("Enter your number ");
		System.out.println("1.WithDraw the money");
		System.out.println("2.Deposite the money");
		System.out.println("3.Check the balance");
		System.out.println("4.Exit");
		int opt=sc.nextInt();
		switch (opt) {
		case 1:{
			System.out.println("please take your money");
		}break;
		case 2:{
			System.out.println("please inset your money");
		}break;
		case 3:{
			System.out.println("your balance is 100 ");
		}break;
		case 4:{
			System.out.println("exiting......");
		}break;
		}
		System.out.println("------------------------------------");
	}

	private static void q3() {
		//
		
		int mynumber;// declaration 
		mynumber =5;//initialization;
		int anotherNumber=10; //declaration;
		System.out.println(mynumber);
		System.out.println(anotherNumber);
		System.out.println("---------------------------");
	}

	private static void q2() {
		// write a program to print the below output;
		for(int i=5;i>=1;i--) {
			for(int j=5;j>=i;j--) {
				System.out.print(j+" ");
			}System.out.println();
		}
		System.out.println("----------------------------");
	}

	private static void q1() {
		//write a java program to print the below output;
		for(int i=1;i<=5;i++) {
			for(int j=1;j<=i;j++) {
				System.out.print(i+" ");
			}System.out.println();
		}
		System.out.println("-------------------------------");
	}

}

1 
2 2 
3 3 3 
4 4 4 4 
5 5 5 5 5 
-------------------------------
5 
5 4 
5 4 3 
5 4 3 2 
5 4 3 2 1 
----------------------------
5
10
---------------------------
Enter your number 
1.WithDraw the money
2.Deposite the money
3.Check the balance
4.Exit
1
please take your money
------------------------------------
500 arm number : 125
50 arm number : 25
------------------------------
0
1
1
2
3
5
8
13
21
34
55
89
---------------------------------
enter your number :
5
number is odd 5
------------------------------------


==================================================================================================================================

